default_platform(:android)
app_id=ENV["app_id"]
firebase_cli=ENV["firebase_cli"]
platform :android do
 before_all do
    ENV["SLACK_URL"]
 end
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean bundleRelease")
   # crashlytics
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "Lane for distributing app using Firebase App Distributions"
  lane :firebase do
    increment_version
    gradle(task: "clean assembleRelease")
    firebase_app_distribution(
    app: "#{app_id}",
    firebase_cli_token: "#{firebase_cli}",
    release_notes_file: "FirebaseAppDistributionConfig/release_notes.txt",
    groups_file: "FirebaseAppDistributionConfig/groups.txt"
    )
  end
 after_all do |lane|
  clean_build_artifacts
  slack(
    message: "App was successfully released!",
    success: true,
    default_payloads: [:lane, :test_result, :git_branch, :git_author]
  )
 end
  private_lane :increment_version do
  latest_release = firebase_app_distribution_get_latest_release(
    app: "#{app_id}",
    firebase_cli_token: "#{firebase_cli}",

  )
  increment_version_code({ version_code: latest_release[:buildVersion].to_i + 1 })
end
error do
  slack(
    message: "An error occured while deploying app #{app_id}",
    success: false
  )
end
end